name: build-and-publish

env:
  PROJECT: MongoDB
  AZURE_ARTIFACTS_FEED_URL: ${{ secrets.NUGET_FEED }}
  BUILD_CONFIGURATION: 'Release'
  DOTNET_VERSION: '9.0.x' 

on:
  push:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v2

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Restore, build, and pack the project
      - name: dotnet build & pack
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet pack --no-build --configuration '${{ env.BUILD_CONFIGURATION }}'

      # Setup .NET Core SDK (for push) â€” you can reuse the same setup step, but this illustrates separation
      - name: Setup .NET Core (push)
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Publish the package to nuget.org
      - name: dotnet nuget push to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push "**/*.nupkg" --api-key $NUGET_ORG --source https://api.nuget.org/v3/index.json


